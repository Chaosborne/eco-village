АНАЛИЗ КНОПОК В ПРОЕКТЕ


|| По итогам анализа я решил не вводить универсальный компонент Button в проекте
|| ввиду большого разнообразия кнопок и немногочисленного повторения каждого их вида.
|| Оставить заверстанные <button> в таком маленьком проекте более оправдано.
|| Универсальный компонент Button с передачей ему множества параметров определенно стоит вводить
|| в большом проекте с десятками повторяющихся элементов


ГРУППИРОВКА КНОПОК ПО ВИЗУАЛУ И РАЗМЕРАМ:

1. Узкие кнопки с иконками:
- SearchBtn (поисковая строка)
- AddToCartBtn (в карточке товара)
- AddToCartBtn (на странице товара) - две похожие кнопки
- removeItemFromCartBtn (карточка товара в корзине)

2. Кнопки количества:
- ItemQuantityBtn (карточка товара в корзине)

3. Основные кнопки действий:
- BuyBtn (корзина)
- submitBtn (форма подтверждения заказа) - похожа на BuyBtn, но во всю ширину

4. Кнопки модальных окон:
- closeSuccessBtn (модальное окно подтверждения успеха заказа)

5. Кнопки форм регистрации и входа:
- FillBtn, EnterBtn, RegisterBtn - но бывают разных цветов

6. Кнопки пагинации:
- Кнопки пагинации в Products

7. Кнопки фильтров:
- FilterToggler, FilterClose

8. Дополнительные кнопки:
- LogoutBtn (UserProfile)
- User (ShopHeader - кнопка входа)

ДОПОЛНИТЕЛЬНО:

- modal кнопки аналогичны кнопкам form, только немного уже
- primary кнопки тоже подходили бы в категорию form, но кнопка BuyBtn уже чем кнопки формы регистрации и входа, и её поведение немного другое в плане JS логики
- Некоторые кнопки имеют состояния (disabled, added, active)
- Кнопки пагинации имеют уникальное поведение с Active состоянием
- AddToCartBtn имеет состояние "added" когда товар уже в корзине

ПРЕДПОЛАГАЕМАЯ СТРУКТУРА КОМПОНЕНТА BUTTON:

interface ButtonProps {
  children: React.ReactNode;
  variant?: 'solid' | 'outline' | 'ghost' | 'icon' | 'pagination' | 'text';
  size?: 'small' | 'medium' | 'large';
  color?: 'primary' | 'secondary' | 'danger' | 'success';
  state?: 'default' | 'active' | 'disabled' | 'added' | 'loading';
  disabled?: boolean;
  loading?: boolean;
  fullWidth?: boolean;
  onClick?: () => void;
  className?: string;
  type?: 'button' | 'submit' | 'reset';
  'aria-label'?: string;
  ref?: React.Ref<HTMLButtonElement>;
}

ВАРИАНТЫ КНОПОК (variant):
1. solid - заполненные кнопки (BuyBtn, EnterBtn, RegisterBtn, submitBtn)
2. outline - кнопки с рамкой (FillBtn, некоторые кнопки форм)
3. ghost - прозрачные кнопки (FilterToggler, FilterClose)
4. icon - кнопки только с иконками (SearchBtn, AddToCartBtn, removeItemFromCartBtn, CloseBtn)
5. pagination - кнопки пагинации (уникальное поведение с Active состоянием)

РАЗМЕРЫ (size):
- small: ItemQuantityBtn, removeItemFromCartBtn, FavoriteBtn
- medium: SearchBtn, AddToCartBtn, CloseBtn, FilterToggler, FilterClose
- large: BuyBtn, submitBtn, EnterBtn, RegisterBtn, FillBtn, closeSuccessBtn, LogoutBtn, User

ЦВЕТА (color):
- primary - основной цвет (EnterBtn, BuyBtn)
- secondary - второстепенный цвет (RegisterBtn, FillBtn)
- danger - опасные действия (removeItemFromCartBtn, LogoutBtn)
- success - успешные действия (AddToCartBtn в состоянии added)

СОСТОЯНИЯ (state):
- default - обычное состояние
- active - активное состояние (для пагинации, фильтров)
- disabled - отключенное состояние
- added - добавлено (для кнопок корзины)
- loading - загрузка (для асинхронных действий)

ПРИМЕРЫ ИСПОЛЬЗОВАНИЯ:

```tsx
// Кнопка с иконкой
<Button variant="icon" size="medium" aria-label="Поиск" type="submit">
  <SearchIcon />
</Button>

// Основная кнопка действия
<Button variant="solid" size="large" color="primary">
  Купить
</Button>

// Кнопка количества
<Button variant="outline" size="small" state="disabled" disabled={quantity >= 10}>
  +
</Button>

// Кнопка формы
<Button variant="solid" size="large" color="primary" loading={isSubmitting}>
  Войти
</Button>

// Опасная кнопка
<Button variant="outline" size="medium" color="danger">
  Удалить
</Button>

// Кнопка с полной шириной
<Button variant="solid" size="large" fullWidth>
  Оформить заказ
</Button>

// Кнопка пагинации
<Button variant="pagination" size="medium" state="active">
  1
</Button>

// Кнопка с состоянием "добавлено"
<Button variant="icon" size="medium" state="added" aria-label="Добавить в корзину">
  <CartIcon />
</Button>
```

МАППИНГ СУЩЕСТВУЮЩИХ КНОПОК:

SOLID (заполненные):
- BuyBtn → variant="solid", size="large", color="primary"
- EnterBtn → variant="solid", size="large", color="primary"
- submitBtn → variant="solid", size="large", color="primary", fullWidth
- RegisterBtn → variant="solid", size="large", color="secondary"

OUTLINE (с рамкой):
- FillBtn → variant="outline", size="large", color="secondary"
- ItemQuantityBtn → variant="outline", size="small", state="disabled" (при quantity === 1)

GHOST (прозрачные):
- FilterToggler → variant="ghost", size="medium"
- FilterClose → variant="ghost", size="medium"

ICON (только иконки):
- SearchBtn → variant="icon", size="medium", type="submit", aria-label="Поиск"
- AddToCartBtn → variant="icon", size="medium", state="added" (когда товар в корзине)
- removeItemFromCartBtn → variant="icon", size="small", color="danger"
- CloseBtn → variant="icon", size="medium"
- FavoriteBtn → variant="icon", size="small"

PAGINATION (пагинация):
- Кнопки пагинации → variant="pagination", size="medium", state="active" (для активной страницы)

СПЕЦИАЛЬНЫЕ СЛУЧАИ:
- LogoutBtn → variant="solid", size="large", color="danger"
- User (ShopHeader) → это ссылка, не кнопка
